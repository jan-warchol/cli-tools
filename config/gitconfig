[alias]
    a = add
    amend = commit --amend
    b = branch
    c = checkout
    cb = !sh -c 'git branch --track $1 $2 && \
        git checkout $1' -
    co = checkout
    ci = commit
    d = diff
    discard = stash save "discarded changes"

    # fixup a previous commit and use rebase to merge the fixup.
    fixup = !sh -c 'git add -u && \
        git commit --fixup $1 && \
        git rebase -i --autosquash $1~2' -

    g = grep -n
    g1 = grep -n -C1
    g2 = grep -n -C2
    g3 = grep -n -C3
    g4 = grep -n -C4
    g5 = grep -n -C5
    gh2 = grep --heading -C2
    gh3 = grep --heading -C3
    gh5 = grep --heading -C5
    gh11 = grep --heading -C11

    graphviz = "!f() { echo 'digraph git {' ; git log --pretty='format:  %h -> { %p }' \"$@\" | sed 's/[0-9a-f][0-9a-f]*/\"&\"/g' ; echo '}'; }; f"

    grab = !sh -c 'git fetch $1 $2 && \
        git checkout FETCH_HEAD && \
        git checkout -b $(echo $1 | sed 's/https...github.com.//')/$2' -

    h = help
    k = commit
    l = log

    # from http://stackoverflow.com/questions/1057564/pretty-git-branch-graphs
    lolog = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all

    list-all-files = ls-tree -r --name-only --full-tree

    merge-base-diff = !sh -c 'git diff $(git merge-base master $1) $1' -
    nuke = !sh -c 'git reset --hard $1 && git clean -f' -

    rb = rebase
    rbo = rebase --onto

    # reflog with dates.
    # see http://stackoverflow.com/a/18987047/2058424
    rf = log -g --format='%h %gd %<(12,trunc)%ci%x08%x08 %gs'
    rs = reset
    rt = remote
    rtv = remote --verbose
    s = status
    st = status

    svap = !sh -c 'git stash save \
        "a backup just in case, $(date +\"%Y-%m-%d %H:%M\")" && \
        git stash apply' -

    squash = !sh -c 'git add -u && \
        git commit --squash $1 && \
        git rebase -i --autosquash $1~2' -

    # temporarily ignoring files, from
    # http://gitready.com/intermediate/2009/02/18/temporarily-ignoring-files.html
    ignore = update-index --assume-unchanged
    unignore = update-index --no-assume-unchanged

[color]
    ui = always

[core]
    # display non-ASCII characters instead of quoting them:
    quotepath = false
    editor = nano

[help]
    autocorrect = 10

[merge]
    # when solving merge conflicts, it can be very helpful to see
    # the original code in addition to both modified versions:
    conflictstyle = diff3

[rebase]
    autosquash = true

[rerere]
    # Reuse recorded resolution of conflicted merges
    # see `man git-rerere'
    enabled = true

[user]
    name = Janek WarchoÅ‚
    email = lemniskata.bernoullego@gmail.com

