[alias]
    # from http://stackoverflow.com/questions/1057564/pretty-git-branch-graphs
    lolog = log --graph --abbrev-commit --decorate --date=relative --format=format:'%C(bold blue)%h%C(reset) - %C(bold green)(%ar)%C(reset) %C(white)%s%C(reset) %C(dim white)- %an%C(reset)%C(bold yellow)%d%C(reset)' --all

    # reflog with dates.
    # see http://stackoverflow.com/a/18987047/2058424
    rf = log -g --format='%h %gd %<(12,trunc)%ci%x08%x08 %gs'


    DODATKOWE MOJE

    ba = branch --all
    br = branch --remotes
    bd = branch --delete
    BD = branch -D

    cm = checkout master
    com = checkout origin/master
    ch1 = checkout HEAD~1

    amna = commit --amend --all

    h = help

    p = push
    po = push origin
    pom = push origin master

    rbm = rebase master
    rim = rebase --interactive master
    riom = rebase --interactive origin/master
    ri11 = rebase --interactive HEAD~11

    g3 = grep -n -C3
    gh3 = grep --heading -C3
    gh11 = grep --heading -C11


    grab = !sh -c 'git fetch $1 $2 && \
        git checkout FETCH_HEAD && \
        git checkout -b $(echo $1 | sed 's/https...github.com.//')/$2' -



[color]
    # I set this to "always" so that the output will still be colored when piped
    # to less.  Of course the downside is that I have to explicitly disable it
    # when I _don't_ want color codes.
    ui = always

[user]
    name = Janek WarchoÅ‚
    email = lemniskata.bernoullego@gmail.com

[diff]
    mnemonicprefix = true

[rebase]
    # stash unstaged changes if rebasing a dirty tree
    autostash = true